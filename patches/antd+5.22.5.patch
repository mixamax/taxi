diff --git a/node_modules/antd/es/menu/MenuItem.d.ts b/node_modules/antd/es/menu/MenuItem.d.ts
index 368fa62..62fa10a 100644
--- a/node_modules/antd/es/menu/MenuItem.d.ts
+++ b/node_modules/antd/es/menu/MenuItem.d.ts
@@ -7,7 +7,8 @@ export interface MenuItemProps extends Omit<RcMenuItemProps, 'title'> {
 }
 type MenuItemComponent = React.FC<MenuItemProps>;
 type RestArgs<T> = T extends (arg: any, ...args: infer P) => any ? P : never;
-type GenericProps<T = unknown> = T extends infer U extends MenuItemProps ? unknown extends U ? MenuItemProps : U : MenuItemProps;
+// type GenericProps<T = unknown> = T extends infer U extends MenuItemProps ? unknown extends U ? MenuItemProps : U : MenuItemProps;
+type GenericProps<T = unknown> = T extends MenuItemProps ? unknown extends T ? MenuItemProps : T : MenuItemProps;
 type GenericComponent = Omit<MenuItemComponent, ''> & (<T extends MenuItemProps>(props: GenericProps<T>, ...args: RestArgs<MenuItemComponent>) => ReturnType<MenuItemComponent>);
 declare const MenuItem: GenericComponent;
 export default MenuItem;
diff --git a/node_modules/antd/es/menu/index.d.ts b/node_modules/antd/es/menu/index.d.ts
index 39e488a..8fec0f9 100644
--- a/node_modules/antd/es/menu/index.d.ts
+++ b/node_modules/antd/es/menu/index.d.ts
@@ -17,7 +17,8 @@ export type MenuRef = {
     focus: (options?: FocusOptions) => void;
 };
 type ComponentProps = MenuProps & React.RefAttributes<MenuRef>;
-type GenericItemType<T = unknown> = T extends infer U extends MenuItemType ? unknown extends U ? ItemType : ItemType<U> : ItemType;
+// type GenericItemType<T = unknown> = T extends infer U extends MenuItemType ? unknown extends U ? ItemType : ItemType<U> : ItemType;
+type GenericItemType<T = unknown> = T extends MenuItemType ? (unknown extends T ? ItemType : ItemType<T>) : ItemType;
 type GenericComponentProps<T = unknown> = Omit<ComponentProps, 'items'> & {
     items?: GenericItemType<T>[];
 };
diff --git a/node_modules/antd/lib/menu/MenuItem.d.ts b/node_modules/antd/lib/menu/MenuItem.d.ts
index 368fa62..62fa10a 100644
--- a/node_modules/antd/lib/menu/MenuItem.d.ts
+++ b/node_modules/antd/lib/menu/MenuItem.d.ts
@@ -7,7 +7,8 @@ export interface MenuItemProps extends Omit<RcMenuItemProps, 'title'> {
 }
 type MenuItemComponent = React.FC<MenuItemProps>;
 type RestArgs<T> = T extends (arg: any, ...args: infer P) => any ? P : never;
-type GenericProps<T = unknown> = T extends infer U extends MenuItemProps ? unknown extends U ? MenuItemProps : U : MenuItemProps;
+// type GenericProps<T = unknown> = T extends infer U extends MenuItemProps ? unknown extends U ? MenuItemProps : U : MenuItemProps;
+type GenericProps<T = unknown> = T extends MenuItemProps ? unknown extends T ? MenuItemProps : T : MenuItemProps;
 type GenericComponent = Omit<MenuItemComponent, ''> & (<T extends MenuItemProps>(props: GenericProps<T>, ...args: RestArgs<MenuItemComponent>) => ReturnType<MenuItemComponent>);
 declare const MenuItem: GenericComponent;
 export default MenuItem;
diff --git a/node_modules/antd/lib/menu/index.d.ts b/node_modules/antd/lib/menu/index.d.ts
index 39e488a..1f44df8 100644
--- a/node_modules/antd/lib/menu/index.d.ts
+++ b/node_modules/antd/lib/menu/index.d.ts
@@ -17,7 +17,8 @@ export type MenuRef = {
     focus: (options?: FocusOptions) => void;
 };
 type ComponentProps = MenuProps & React.RefAttributes<MenuRef>;
-type GenericItemType<T = unknown> = T extends infer U extends MenuItemType ? unknown extends U ? ItemType : ItemType<U> : ItemType;
+// type GenericItemType<T = unknown> = T extends infer U extends MenuItemType ? unknown extends U ? ItemType : ItemType<U> : ItemType;
+type GenericItemType<T = unknown> = T extends MenuItemType ? unknown extends T ? ItemType : ItemType<T> : ItemType;
 type GenericComponentProps<T = unknown> = Omit<ComponentProps, 'items'> & {
     items?: GenericItemType<T>[];
 };
